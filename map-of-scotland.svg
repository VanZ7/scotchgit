<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   sodipodi:docname="map-of-scotland.svg"
   inkscape:version="0.91 r13725"
   version="1.1"
   id="svg3336"
   height="530"
   width="389">
  <sodipodi:namedview
     inkscape:current-layer="svg3336"
     inkscape:window-maximized="1"
     inkscape:window-y="-8"
     inkscape:window-x="-8"
     inkscape:cy="530.23342"
     inkscape:cx="192.31935"
     inkscape:zoom="2.0226415"
     showgrid="false"
     id="namedview3372"
     inkscape:window-height="705"
     inkscape:window-width="1366"
     inkscape:pageshadow="2"
     inkscape:pageopacity="0"
     guidetolerance="10"
     gridtolerance="10"
     objecttolerance="10"
     borderopacity="1"
     bordercolor="#666666"
     pagecolor="#ffffff" />
  <script
     id="inkwebjs"
     type="text/javascript"><![CDATA[
/* inkweb.js - InkWebEffect:AutoUpdate */
/*
**  InkWeb - Inkscape's Javscript features for the open vector web
**
**  Copyright (C) 2009 Aurelio A. Heckert, aurium (a) gmail dot com
**
**  ********* Bugs and New Fetures *************************************
**   If you found any bug on this script or if you want to propose a
**   new feature, please report it in the inkscape bug traker
**   https://bugs.launchpad.net/inkscape/+filebug
**   and assign that to Aurium.
**  ********************************************************************
**
**  This program is free software: you can redistribute it and/or modify
**  it under the terms of the GNU Lesser General Public License as published
**  by the Free Software Foundation, either version 3 of the License, or
**  (at your option) any later version.
**
**  This program is distributed in the hope that it will be useful,
**  but WITHOUT ANY WARRANTY; without even the implied warranty of
**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
**  GNU Lesser General Public License for more details.
**
**  You should have received a copy of the GNU Lesser General Public License
**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

var InkWeb = {

  version: 0.04,

  NS: {
    svg:      "http://www.w3.org/2000/svg",
    sodipodi: "http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd",
    inkscape: "http://www.inkscape.org/namespaces/inkscape",
    cc:       "http://creativecommons.org/ns#",
    dc:       "http://purl.org/dc/elements/1.1/",
    rdf:      "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    xlink:    "http://www.w3.org/1999/xlink",
    xml:      "http://www.w3.org/XML/1998/namespace"
  }

};

InkWeb.el = function (tag, attributes) {
  // A helper to create SVG elements
  var element = document.createElementNS( this.NS.svg, tag );
  for ( var att in attributes ) {
    switch ( att ) {
      case "parent":
        attributes.parent.appendChild( element );
        break;
      case "text":
        element.appendChild( document.createTextNode( attributes.text ) );
        break;
      default:
        element.setAttribute( att, attributes[att] );
    }
  }
  return element;
}

InkWeb.reGetStyleAttVal = function (att) {
  return new RegExp( "(^|.*;)[ ]*"+ att +":([^;]*)(;.*|$)" )
}

InkWeb.getStyle = function (el, att) {
  // This method is needed because el.style is only working
  // to HTML style in the Firefox 3.0
  if ( typeof(el) == "string" )
    el = document.getElementById(el);
  var style = el.getAttribute("style");
  var match = this.reGetStyleAttVal(att).exec(style);
  if ( match ) {
    return match[2];
  } else {
    return false;
  }
}

InkWeb.setStyle = function (el, att, val) {
  if ( typeof(el) == "string" )
    el = document.getElementById(el);
  var style = el.getAttribute("style");
  re = this.reGetStyleAttVal(att);
  if ( re.test(style) ) {
    style = style.replace( re, "$1"+ att +":"+ val +"$3" );
  } else {
    style += ";"+ att +":"+ val;
  }
  el.setAttribute( "style", style );
  return val
}

InkWeb.transmitAtt = function (conf) {
  conf.att = conf.att.split( /\s+/ );
  if ( typeof(conf.from) == "string" )
    conf.from = document.getElementById( conf.from );
  if ( ! conf.to.join )
    conf.to = [ conf.to ];
  for ( var toEl,elN=0; toEl=conf.to[elN]; elN++ ) {
    if ( typeof(toEl) == "string" )
      toEl = document.getElementById( toEl );
    for ( var i=0; i<conf.att.length; i++ ) {
      var val = this.getStyle( conf.from, conf.att[i] );
      if ( val ) {
        this.setStyle( toEl, conf.att[i], val );
      } else {
        val = conf.from.getAttribute(conf.att[i]);
        toEl.setAttribute( conf.att[i], val );
      }
    }
  }
}

InkWeb.setAtt = function (conf) {
  if ( ! conf.el.join )
    conf.to = [ conf.el ];
  conf.att = conf.att.split( /\s+/ );
  conf.val = conf.val.split( /\s+/ );
  for ( var el,elN=0; el=conf.el[elN]; elN++ ) {
    if ( typeof(el) == "string" )
      el = document.getElementById( el );
    for ( var att,i=0; att=conf.att[i]; i++ ) {
      if (
           att == "width"  ||
           att == "height" ||
           att == "x"  ||
           att == "y"  ||
           att == "cx" ||
           att == "cy" ||
           att == "r"  ||
           att == "rx" ||
           att == "ry" ||
           att == "transform"
         ) {
        el.setAttribute( att, conf.val[i] );
      } else {
        this.setStyle( el, att, conf.val[i] );
      }
    }
  }
}

InkWeb.moveElTo = function (startConf) {
  if ( typeof(startConf) == "string" ) {
    // startConf may be only a element Id, to timeout recursive calls.
    var el = document.getElementById( startConf );
  } else {
    if ( typeof(startConf.el) == "string" )
      startConf.el = document.getElementById( startConf.el );
    var el = startConf.el;
  }
  if ( ! el.inkWebMoving ) {
    el.inkWebMoving = {
      step: 0
    };
  }
  var conf = el.inkWebMoving;
  if ( conf.step == 0 ) {
    conf.x = startConf.x;
    conf.y = startConf.y;
    // dur : duration of the animation in seconds
    if ( startConf.dur ) { conf.dur = startConf.dur }
    else { conf.dur = 1 }
    // steps : animation steps in a second
    if ( startConf.stepsBySec ) { conf.stepsBySec = startConf.stepsBySec }
    else { conf.stepsBySec = 16 }
    conf.sleep = Math.round( 1000 / conf.stepsBySec );
    conf.steps = conf.dur * conf.stepsBySec;
    var startPos = el.getBBox();
    conf.xInc = ( conf.x - startPos.x ) / conf.steps;
    conf.yInc = ( conf.y - startPos.y ) / conf.steps;
    conf.transform = el.transform.baseVal.consolidate();
    if ( ! conf.transform ) {
      conf.transform = el.ownerSVGElement.createSVGTransform();
    }
    el.transform.baseVal.clear();
    el.transform.baseVal.appendItem(conf.transform);
  }
  if ( conf.step < conf.steps ) {
    conf.step++;
    conf.transform.matrix.e += conf.xInc;
    conf.transform.matrix.f += conf.yInc;
    try{ el.ownerSVGElement.forceRedraw() }
    catch(e){ this.log(e, "this "+el.ownerSVGElement+" has no forceRedraw().") }
    conf.timeout = setTimeout( 'InkWeb.moveElTo("'+el.id+'")', conf.sleep );
  } else {
    delete el.inkWebMoving;
  }
}

InkWeb.log = function () { /* if you need that, use the inkweb-debug.js too */ }
]]></script>
  <metadata
     id="metadata3376">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title></dc:title>
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <defs
     id="defs3374" />
  <g
     id="g3338">
    <title
       id="title3340">Layer 1</title>
    <path
       style="fill:none;fill-rule:evenodd;stroke:#000000"
       d="m 215.55283,342.40647 c 2,1 8.44717,5.59353 10.44717,5.59353 7,-2 10,0 15,-6 l 4,1 -2,4 c 9,1 9,2 17,6 l 0,2 -11,4 c -3,1 -6,-1 -8,-1 -5,1 -9,7 -9,12 l -5,-2 -1,3 -11,-1 c -4,-1 -8,-3 -12,-1 -2,1 -4,3 -2,5 3,5 12,2 16,2 7,1 16,10 25,5 3,-2 3,-4 3,-7 l 9,-2 12,6 16,5 6,13 c -5,2 -13,8 -11,14 1,4 4,4 6,11 -15,4 -29,16 -42,25 -5,4 -5,6 -8,7 -4,2 -10,0 -14,-1 -7,-1 -7,1 -16,-3 1,4 3,11 0,14 -2,4 -7,2 -10,3 -3,1 -5,4 -7,4 -3,1 -10,0 -12,-2 -2,-1 -2,-2 -3,-4 -7,2 -4,-2 -8,-4 -2,-1 -4,0 -6,1 1,3 2,4 4,7 3,5 4,12 -5,9 -3,-1 -13,-14 -20,-11 -5,3 0,8 -1,15 -8,-3 -5,-8 -9,-13 -3,-2 -8,-2 -10,-6 -2,-4 2,-9 5,-8 2,0 5,6 6,8 1,-2 3,-4 3,-6 1,-3 -2,-6 1,-12 3,-4 7,-5 9,-8 3,-4 1,-7 3,-10 2,-2 5,-4 7,-7 5,-9 -5,-16 -11,-20 l 1,-7 c 1,-3 -1,-7 2,-9 2,-2 5,-2 7,-1 7,1 10,3 17,2 -24.82938,-11.76833 -4.60161,0.0691 16.42682,-24.57318 13.07304,-17.44717 32.12601,-18.02035 33.12601,-17.02035 z"
       id="path4031" />
    <path
       style="fill:none;fill-rule:evenodd;stroke:#000000"
       d="m 293,243 c 7,2 4,9 12,16 -3,6 -5,5 -7,8 l -4,10 -5,5 -5,16 c -1,2 -6,7 -8,10 -1,1 -3,5 -5,6 -1,1 -11,1 -9,7 1,1 4,3 6,4 -5,8 -10,11 -20,12 -5,0 -7,-2 -11,0 -8,2 -8.52439,7.42682 -21.52439,5.42682 -34.03739,1.83639 -28.56978,27.20614 -61.29064,34.437 L 141,375 l 1,-12 -5,0 -3,21 -4,3 c -3,-4 -5,-7 -10,-9 1,-10 6,-7 6,-14 6,-2 12,-4 10,-12 -3,1 -6,3 -9,5 -6,6 -9,15 -19,12 l 2,-5 -3,-1 c 2,-8 -3,-15 3,-20 4,-5 9,0 13,0 6,0 8,-7 9,-12 l -8,7 -4,-1 2,-9 11,-3 9,-7 c -5,0 -12,0 -16,-4 2,0 5,-1 6,-3 1,-3 -2,-8 -6,-6 -6,2 -2,8 -4,12 -3,5 -11,3 -15,11 -6,0 -15,2 -20,-3 15,-8 11,1 20,-7 -12,-5 -18,6 -31,-2 9,-3 8,-6 19,-3 l 0,-5 5,-1 c -2,-2 -1,-6 -1,-9 7,2 8,2 15,1 -7,-6 -9,1 -14,-8 l 7,-1 c 5,0 7,3 7,-6 l -4,1 -1,-7 c 4,1 4,1 8,-1 l -6,-4 c -4,-1 -6,0 -9,-4 l 15,0 c -5,-7 -8,-3 -16,-3 0,-6 -1,-7 -4,-12 10,-3 9,3 19,2 l -6,-7 -7,-6 c 7,-2 7,-6 1,-6 -3,-9 5,-6 9,-3 l -1,-10 5,5 c 4,-2 9,-5 13,-3 5,2 2,6 12,6 -5,-5 -7,-7 -13,-12 -3,-2 -6,-4 -5,-8 l 3,4 c 6,-10 5,-5 1,-15 l 9,0 11,1 -9,-12 7,1 -2,-6 c 2,-3 1,-3 -2,-5 l 0,-3 8,-6 4,6 7,-2 -3,9 c 5,-1 7,-2 9,-7 l 8,8 -1,-4 c 4,-2 13,-5 18,-6 3,0 9,2 12,1 2,0 4,-2 6,-3 6,-1 9,2 15,-5 l 7,2 10,1 c -5,4 -3,4 -1,11 l -3,0 c 1,8 -7,11 -12,15 l -8,6 -5,6 c -3,3 -7,4 -11,6 -7,3 -6,4 -15,6 l 4,7 -16,0 c 4,7 12,4 18,6 l 11,-4 c -4,7 -7,4 -7,12 -3,-1 -6,-2 -9,-2 -7,1 -5,4 -15,3 l -3,10 c 10,-2 9,-9 18,-6 -2,3 -10,11 -13,12 -3,0 -6,-2 -9,0 -1,1 -2,3 0,4 2,3 13,0 16,-1 4,-3 6.55283,-4.50404 6.55283,-4.50404 5.8472,8.03338 19.50334,10.23907 23.57252,19.91646 4.00183,9.51725 20.12789,13.68977 27.64549,8.46285 2.12365,-1.47655 4.20544,-0.34256 6.20873,-0.25774 2.00328,0.0848 3.92806,-0.87953 5.73768,-1.65843 3.61189,-1.55464 7.12104,-2.97778 9.09973,-5.09215 1.5042,-1.60734 2.63301,-2.78828 3.73714,-4.77823 1.179,-2.1249 2.35839,-3.74014 2.71511,-6.83557 0.35673,-3.09543 0.71837,-6.6515 1.00068,-10.01269 0.31078,-3.70017 -0.62442,-6.83464 -2.80449,-9.24046 0,0 20.53457,-7 27.53457,-5 z"
       id="path4029" />
    <path
       style="fill:none;fill-rule:evenodd;stroke:#000000"
       d="M 265.13019,247.89434 C 258.2582,249.46865 240.6554,244.33652 237,245 c -7.71789,-3.37071 -11.34782,-2.38713 -14,-3 -6.90451,-1.20601 -28.72661,12.8511 -34.26429,15.46752 2.83945,3.24199 7.7938,6.12747 12.56979,9.20579 5.48284,3.53391 8.30549,4.87407 11.15247,10.93376 2.43558,5.18407 9.56318,8.58817 14.33305,9.73498 4.76988,1.14682 9.43778,0.81946 13.72125,-1.73207 34.44313,0.44716 28.61792,-37.71564 24.61792,-37.71564 z"
       id="selection_to_path_1_12" />
    <path
       onclick=";
InkWeb.transmitAtt({from:this, to:['selection_to_path_1_26'], att:'fill'})"
       fill="none"
       fill-rule="evenodd"
       stroke="rgb(0,0,0)"
       id="selection_to_path_1_23"
       d="m105,368c-5,7 -2,7 -3,12c-2,5 -4,4 -5,12c7,1 7,1 13,-4c-1,8 -19,16 -11,27c0,0 -2,2 -2,2c0,0 0,1 0,1c13,-2 12,-14 15,-19c1,-4 5,-5 4,-9c0,-3 -4,-7 -5,-10c0,-3 1,-5 1,-8c0,0 -7,-4 -7,-4z" />
    <path
       id="selection_to_path_1_27"
       d="m 62,384 c 0,0 -8,6 -8,6 0,0 1,4 1,4 0,0 -5,5 -5,5 0,0 1,1 1,1 7,-2 16,-7 11,-16 z m -1,22 c 4,-1 4,-1 5,-5 1,0 2,1 4,0 9,0 5,-7 3,-12 0,0 -2,-6 -2,-6 -7,3 -4,5 -6,11 -2,5 -3,5 -4,12 z" />
    <path
       id="selection_to_path_1_28"
       d="m 118,399 c -4,5 -3,7 -3,13 0,3 0,7 4,7 8,-1 5,-16 -1,-20 z m -4,-17 c 4,5 12,13 19,12 -2,-3 -2,-5 -6,-6 0,0 0,-4 0,-4 0,0 -13,-2 -13,-2 z M 72,369 c 0,0 -6,4 -6,4 3,1 7,0 6,-4 z m 11,21 c 3,-6 4,-6 1,-12 2,0 4,1 6,0 4,-1 8,-10 9,-13 -7,0 -13,6 -17,11 -3,4 -9,8 1,14 z m -6,-67 c -6,6 -8,2 -9,9 4,1 4,2 6,5 0,0 8,1 8,1 0,0 -6,4 -6,4 0,0 7,4 7,4 0,0 -20,5 -20,5 1,1 1,2 2,3 3,1 9,2 11,0 1,-2 1,-3 1,-4 10,3 5,-3 16,-1 3,-4 5,-5 10,-5 -1,-10 -5,-7 -11,-11 -5,-3 -4,-5 -15,-10 z m -16,-3 c -7,5 -11,5 -12,12 -7,1 -11,1 -17,5 1,1 1,2 3,2 5,1 17,-8 21,-11 3,-2 6,-4 5,-8 z m 7,-27 c 0,0 -2,6 -2,6 0,0 11,-1 11,-1 0,0 -9,-5 -9,-5 z m -56,-3 c 0,0 -5,4 -5,4 0,9 -1,9 -5,16 0,0 1,1 1,1 0,0 8,-11 8,-11 0,0 3,-6 3,-6 0,0 -2,-4 -2,-4 z m 80,-34 c -2,4 -3,6 -7,7 0,11 6,8 7,6 1,-1 0,-12 0,-13 z m -68,-9 c -3,-4 -4,-3 -8,-4 0,0 -1,4 -1,4 1,0 3,1 4,1 8,5 0,14 -1,20 -1,5 1,9 -2,18 0,0 7,0 7,0 0,-6 1,-12 2,-18 1,-7 0,-10 6,-15 0,0 -1,-6 -1,-6 4,-1 5,-1 7,-5 -8,-1 -9,-2 -13,5 z m 50,-7 c 0,0 -6,5 -6,5 0,0 3,8 3,8 -9,1 -6,-4 -13,-6 0,0 2,15 2,15 0,0 -9,-5 -9,-5 -1,6 2,9 7,13 1,-1 2,-2 3,-3 9,-3 4,14 10,16 5,3 7,-6 12,1 3,-1 9,-3 8,3 -1,2 -4,4 -5,6 8,0 8,-4 11,-9 0,0 4,-5 4,-5 -6,-1 -14,-4 -17,-10 0,0 -3,-18 -3,-18 -1,-5 -3,-8 -7,-11 z M 52,205 c -3,-6 -5,-6 -11,-4 0,0 1,4 1,4 -7,4 -5,8 1,6 0,0 2,5 2,5 0,0 -6,0 -6,0 0,0 -1,3 -1,3 5,2 6,3 7,8 0,0 -8,3 -8,3 3,4 8,7 12,3 2,-1 3,-5 5,-6 1,-1 5,0 7,0 -1,-6 -3,-8 -8,-12 0,0 5,-2 5,-2 0,3 1,4 3,5 5,4 10,0 15,-2 -2,-7 -8,-6 -14,-6 0,0 16,-4 16,-4 -3,-11 3,-10 12,-13 0,0 -2,-7 -2,-7 0,-2 2,-6 -2,-8 -3,-3 -9,4 -11,6 -8,7 -11,5 -15,8 -4,3 0,6 -8,13 z m 29,-6 c 0,0 0,4 0,4 6,-2 9,1 12,-5 0,0 -12,1 -12,1 z m 165,-45 c 0,0 -2,5 -2,5 0,0 6,3 6,3 0,0 2,-8 2,-8 0,0 -6,0 -6,0 z m -18,-5 c 0,1 1,3 1,4 1,1 1,2 2,2 7,5 8,-7 1,-7 -2,0 -3,0 -4,1 z m 23,-16 c 0,0 2,5 2,5 0,0 5,-5 5,-5 0,0 -1,-1 -1,-1 0,0 -6,1 -6,1 z m -11,-8 c 1,9 -6,3 -9,5 -3,2 -2,9 -1,12 0,0 8,-1 8,-1 1,5 3,3 7,4 0,0 5,2 5,2 4,1 9,0 11,-4 0,0 -13,1 -13,1 0,0 1,-4 1,-4 0,0 -8,-1 -8,-1 0,0 0,-2 0,-2 0,0 4,-2 4,-2 0,0 -4,-3 -4,-3 4,-3 6,-2 9,-7 -4,-1 -6,-1 -10,0 z m 16,-4 c 0,0 1,9 1,9 0,0 7,-7 7,-7 0,0 -8,-2 -8,-2 z m 9,1 c 0,0 10,-3 10,-3 0,0 -1,-3 -1,-3 -7,1 -8,-1 -9,6 z m -20,-5 c 0,0 6,4 6,4 3,-4 -1,-8 -6,-4 z m 99,-89 c 0,0 -4,7 -4,7 0,0 7,-2 7,-2 0,0 -3,-5 -3,-5 z M 321,14 c 0,0 -9,6 -9,6 3,5 5,4 11,4 0,0 -2,2 -2,2 0,0 -1,0 -1,0 3,4 4,4 8,5 -4,7 -10,6 -17,9 0,0 0,2 0,2 10,4 8,6 15,-1 7,13 -3,15 4,27 0,0 2,0 2,0 0,0 2,-8 2,-8 0,0 0,-10 0,-10 0,0 3,-6 3,-6 0,0 -5,-9 -5,-9 3,-4 4,-5 5,-10 -4,2 -4,2 -8,0 -7,-3 -4,-6 -8,-11 z m 24,1 c 0,0 8,1 8,1 0,0 -2,-4 -2,-4 0,0 -6,3 -6,3 z M 336,4 c 0,0 -4,13 -4,13 0,0 7,2 7,2 0,0 -2,-7 -2,-7 0,-4 2,-4 -1,-8 z m 8,-2 c 0,0 -1,4 -1,4 0,0 4,1 4,1 0,0 -3,-5 -3,-5 z" />
  </g>
</svg>
